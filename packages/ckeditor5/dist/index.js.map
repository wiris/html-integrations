{"version":3,"file":"index.js","sources":["../src/integration.js","../src/commands.js","../src/plugin.js"],"sourcesContent":["import IntegrationModel from \"@wiris/mathtype-html-integration-devkit/src/integrationmodel.js\";\nimport Util from \"@wiris/mathtype-html-integration-devkit/src/util.js\";\nimport Configuration from \"@wiris/mathtype-html-integration-devkit/src/configuration.js\";\nimport Latex from \"@wiris/mathtype-html-integration-devkit/src/latex.js\";\nimport MathML from \"@wiris/mathtype-html-integration-devkit/src/mathml.js\";\nimport Telemeter from \"@wiris/mathtype-html-integration-devkit/src/telemeter.js\";\n\n/**\n * This class represents the MathType integration for CKEditor5.\n * @extends {IntegrationModel}\n */\nexport default class CKEditor5Integration extends IntegrationModel {\n  constructor(ckeditorIntegrationModelProperties) {\n    const editor = ckeditorIntegrationModelProperties.editorObject;\n\n    if (typeof editor.config !== \"undefined\" && typeof editor.config.get(\"mathTypeParameters\") !== \"undefined\") {\n      ckeditorIntegrationModelProperties.integrationParameters = editor.config.get(\"mathTypeParameters\");\n    }\n    /**\n     * CKEditor5 Integration.\n     *\n     * @param {integrationModelProperties} integrationModelAttributes\n     */\n    super(ckeditorIntegrationModelProperties);\n\n    /**\n     * Folder name used for the integration inside CKEditor plugins folder.\n     */\n    this.integrationFolderName = \"ckeditor_wiris\";\n  }\n\n  /**\n   * @inheritdoc\n   * @returns {string} - The CKEditor instance language.\n   * @override\n   */\n  getLanguage() {\n    // Returns the CKEDitor instance language taking into account that the language can be an object.\n    // Try to get editorParameters.language, fail silently otherwise\n    try {\n      return this.editorParameters.language;\n    } catch (e) {}\n    const languageObject = this.editorObject.config.get(\"language\");\n    if (languageObject != null) {\n      if (typeof languageObject === \"object\") {\n        // eslint-disable-next-line no-prototype-builtins\n        if (languageObject.hasOwnProperty(\"ui\")) {\n          return languageObject.ui;\n        }\n        return languageObject;\n      }\n      return languageObject;\n    }\n    return super.getLanguage();\n  }\n\n  /**\n   * Adds callbacks to the following CKEditor listeners:\n   * - 'focus' - updates the current instance.\n   * - 'contentDom' - adds 'doubleclick' callback.\n   * - 'doubleclick' - sets to null data.dialog property to avoid modifications for MathType formulas.\n   * - 'setData' - parses the data converting MathML into images.\n   * - 'afterSetData' - adds an observer to MathType formulas to avoid modifications.\n   * - 'getData' - parses the data converting images into selected save mode (MathML by default).\n   * - 'mode' - recalculates the active element.\n   */\n  addEditorListeners() {\n    const editor = this.editorObject;\n\n    if (typeof editor.config.wirislistenersdisabled === \"undefined\" || !editor.config.wirislistenersdisabled) {\n      this.checkElement();\n    }\n  }\n\n  /**\n   * Checks the current container and assign events in case that it doesn't have them.\n   * CKEditor replaces several times the element element during its execution,\n   * so we must assign the events again to editor element.\n   */\n  checkElement() {\n    const editor = this.editorObject;\n    const newElement = editor.sourceElement;\n\n    // If the element wasn't treated, add the events.\n    if (!newElement.wirisActive) {\n      this.setTarget(newElement);\n      this.addEvents();\n      // Set the element as treated\n      newElement.wirisActive = true;\n    }\n  }\n\n  /**\n   * @inheritdoc\n   * @param {HTMLElement} element - HTMLElement target.\n   * @param {MouseEvent} event - event which trigger the handler.\n   */\n  doubleClickHandler(element, event) {\n    this.core.editionProperties.dbclick = true;\n    if (this.editorObject.isReadOnly === false) {\n      if (element.nodeName.toLowerCase() === \"img\") {\n        if (Util.containsClass(element, Configuration.get(\"imageClassName\"))) {\n          // Some plugins (image2, image) open a dialog on Double-click. On formulas\n          // doubleclick event ends here.\n          if (typeof event.stopPropagation !== \"undefined\") {\n            // old I.E compatibility.\n            event.stopPropagation();\n          } else {\n            event.returnValue = false;\n          }\n          this.core.getCustomEditors().disable();\n          const customEditorAttr = element.getAttribute(Configuration.get(\"imageCustomEditorName\"));\n          if (customEditorAttr) {\n            this.core.getCustomEditors().enable(customEditorAttr);\n          }\n          this.core.editionProperties.temporalImage = element;\n          this.openExistingFormulaEditor();\n        }\n      }\n    }\n  }\n\n  /** @inheritdoc */\n  static getCorePath() {\n    return null; // TODO\n  }\n\n  /** @inheritdoc */\n  callbackFunction() {\n    super.callbackFunction();\n    this.addEditorListeners();\n  }\n\n  openNewFormulaEditor() {\n    // Store the editor selection as it will be lost upon opening the modal\n    this.core.editionProperties.selection = this.editorObject.editing.view.document.selection;\n\n    // Focus on the selected editor when multiple editor instances are present\n    WirisPlugin.currentInstance = this;\n\n    return super.openNewFormulaEditor();\n  }\n\n  /**\n   * Replaces old formula with new MathML or inserts it in caret position if new\n   * @param {String} mathml MathML to update old one or insert\n   * @returns {module:engine/model/element~Element} The model element corresponding to the inserted image\n   */\n  insertMathml(mathml) {\n    // This returns the value returned by the callback function (writer => {...})\n    return this.editorObject.model.change((writer) => {\n      const core = this.getCore();\n      const selection = this.editorObject.model.document.selection;\n\n      const modelElementNew = writer.createElement(\"mathml\", {\n        formula: mathml,\n        ...Object.fromEntries(selection.getAttributes()), // To keep the format, such as style and font\n      });\n\n      // Obtain the DOM <span><img ... /></span> object corresponding to the formula\n      if (core.editionProperties.isNewElement) {\n        // Don't bother inserting anything at all if the MathML is empty.\n        if (!mathml) return;\n\n        const viewSelection =\n          this.core.editionProperties.selection || this.editorObject.editing.view.document.selection;\n        const modelPosition = this.editorObject.editing.mapper.toModelPosition(viewSelection.getLastPosition());\n\n        this.editorObject.model.insertObject(modelElementNew, modelPosition);\n\n        // Remove selection\n        if (!viewSelection.isCollapsed) {\n          for (const range of viewSelection.getRanges()) {\n            writer.remove(this.editorObject.editing.mapper.toModelRange(range));\n          }\n        }\n\n        // Set carret after the formula\n        const position = this.editorObject.model.createPositionAfter(modelElementNew);\n        writer.setSelection(position);\n      } else {\n        const img = core.editionProperties.temporalImage;\n        const viewElement = this.editorObject.editing.view.domConverter.domToView(img).parent;\n        const modelElementOld = this.editorObject.editing.mapper.toModelElement(viewElement);\n\n        // Insert the new <mathml> and remove the old one\n        const position = this.editorObject.model.createPositionBefore(modelElementOld);\n\n        // If the given MathML is empty, don't insert a new formula.\n        if (mathml) {\n          this.editorObject.model.insertObject(modelElementNew, position);\n        }\n        writer.remove(modelElementOld);\n      }\n\n      // eslint-disable-next-line consistent-return\n      return modelElementNew;\n    });\n  }\n\n  /**\n   * Finds the text node corresponding to given DOM text element.\n   * @param {element} viewElement Element to find corresponding text node of.\n   * @returns {module:engine/model/text~Text|undefined} Text node corresponding to the given element or undefined if it doesn't exist.\n   */\n  findText(viewElement) {\n    // eslint-disable-line consistent-return\n    // mapper always converts text nodes to *new* model elements so we need to convert the text's parents and then come back down\n    let pivot = viewElement;\n    let element;\n    while (!element) {\n      element = this.editorObject.editing.mapper.toModelElement(\n        this.editorObject.editing.view.domConverter.domToView(pivot),\n      );\n      pivot = pivot.parentElement;\n    }\n\n    // Navigate through all the subtree under `pivot` in order to find the correct text node\n    const range = this.editorObject.model.createRangeIn(element);\n    const descendants = Array.from(range.getItems());\n    for (const node of descendants) {\n      let viewElementData = viewElement.data;\n      if (viewElement.nodeType === 3) {\n        // Remove invisible white spaces\n        viewElementData = viewElementData.replaceAll(String.fromCharCode(8288), \"\");\n      }\n      if (node.is(\"textProxy\") && node.data === viewElementData.replace(String.fromCharCode(160), \" \")) {\n        return node.textNode;\n      }\n    }\n  }\n\n  /** @inheritdoc */\n  insertFormula(focusElement, windowTarget, mathml, wirisProperties) {\n    // eslint-disable-line no-unused-vars\n    const returnObject = {};\n\n    let mathmlOrigin;\n    if (!mathml) {\n      this.insertMathml(\"\");\n    } else if (this.core.editMode === \"latex\") {\n      returnObject.latex = Latex.getLatexFromMathML(mathml);\n      returnObject.node = windowTarget.document.createTextNode(`$$${returnObject.latex}$$`);\n\n      this.editorObject.model.change((writer) => {\n        const { latexRange } = this.core.editionProperties;\n\n        const startNode = this.findText(latexRange.startContainer);\n        const endNode = this.findText(latexRange.endContainer);\n\n        let startPosition = writer.createPositionAt(startNode.parent, startNode.startOffset + latexRange.startOffset);\n        let endPosition = writer.createPositionAt(endNode.parent, endNode.startOffset + latexRange.endOffset);\n\n        let range = writer.createRange(startPosition, endPosition);\n\n        // When Latex is next to image/formula.\n        if (latexRange.startContainer.nodeType === 3 && latexRange.startContainer.previousSibling?.nodeType === 1) {\n          // Get the position of the latex to be replaced.\n          const latexEdited = `$$${Latex.getLatexFromMathML(\n            MathML.safeXmlDecode(this.core.editionProperties.temporalImage.dataset.mathml),\n          )}$$`;\n          let data = latexRange.startContainer.data;\n\n          // Remove invisible characters.\n          data = data.replaceAll(String.fromCharCode(8288), \"\");\n\n          // Get to the start of the latex we are editing.\n          const offset = data.indexOf(latexEdited);\n          const dataOffset = data.substring(offset);\n          const second$ = dataOffset.substring(2).indexOf(\"$$\") + 4;\n          const substring = dataOffset.substr(0, second$);\n          data = data.replace(substring, \"\");\n\n          if (!data) {\n            startPosition = writer.createPositionBefore(startNode);\n            range = startNode;\n          } else {\n            startPosition = startPosition = writer.createPositionAt(startNode.parent, startNode.startOffset + offset);\n            endPosition = writer.createPositionAt(endNode.parent, endNode.startOffset + second$ + offset);\n            range = writer.createRange(startPosition, endPosition);\n          }\n        }\n\n        writer.remove(range);\n        writer.insertText(`$$${returnObject.latex}$$`, startNode.getAttributes(), startPosition);\n      });\n    } else {\n      mathmlOrigin = this.core.editionProperties.temporalImage?.dataset.mathml;\n      try {\n        returnObject.node = this.editorObject.editing.view.domConverter.viewToDom(\n          this.editorObject.editing.mapper.toViewElement(this.insertMathml(mathml)),\n          windowTarget.document,\n        );\n      } catch (e) {\n        const x = e.toString();\n        if (x.includes(\"CKEditorError: Cannot read property 'parent' of undefined\")) {\n          this.core.modalDialog.cancelAction();\n        }\n      }\n    }\n\n    // Build the telemeter payload separated to delete null/undefined entries.\n    const payload = {\n      mathml_origin: mathmlOrigin ? MathML.safeXmlDecode(mathmlOrigin) : mathmlOrigin,\n      mathml: mathml ? MathML.safeXmlDecode(mathml) : mathml,\n      elapsed_time: Date.now() - this.core.editionProperties.editionStartTime,\n      editor_origin: null, // TODO read formula to find out whether it comes from Oxygen Desktop\n      toolbar: this.core.modalDialog.contentManager.toolbar,\n      size: mathml?.length,\n    };\n\n    // Remove desired null keys.\n    Object.keys(payload).forEach((key) => {\n      if (key === \"mathml_origin\" || key === \"editor_origin\") !payload[key] ? delete payload[key] : {};\n    });\n\n    // Call Telemetry service to track the event.\n    try {\n      Telemeter.telemeter.track(\"INSERTED_FORMULA\", {\n        ...payload,\n      });\n    } catch (error) {\n      console.error(\"Error tracking INSERTED_FORMULA\", error);\n    }\n\n    /* Due to PLUGINS-1329, we add the onChange event to the CK4 insertFormula.\n        We probably should add it here as well, but we should look further into how */\n    // this.editorObject.fire('change');\n\n    // Remove temporal image of inserted formula\n    this.core.editionProperties.temporalImage = null;\n\n    return returnObject;\n  }\n\n  /**\n   * Function called when the content submits an action.\n   */\n  notifyWindowClosed() {\n    this.editorObject.editing.view.focus();\n  }\n}\n","/* eslint-disable max-classes-per-file */\nimport { Command } from \"ckeditor5/src/core.js\";\nimport CKEditor5Integration from \"./integration.js\";\n\n/**\n * Command for opening the MathType editor\n */\nexport class MathTypeCommand extends Command {\n  execute(options = {}) {\n    // Check we get a valid integration\n    // eslint-disable-next-line no-prototype-builtins\n    if (!options.hasOwnProperty(\"integration\") || !(options.integration instanceof CKEditor5Integration)) {\n      throw 'Must pass a valid CKEditor5Integration instance as attribute \"integration\" of options';\n    }\n\n    // Save the integration instance as a property of the command.\n    this.integration = options.integration;\n\n    // Set custom editor or disable it\n    this.setEditor();\n\n    // Open the editor\n    this.openEditor();\n  }\n\n  /**\n   * Sets the appropriate custom editor, if any, or disables them.\n   */\n  setEditor() {\n    // It's possible that a custom editor was last used.\n    // We need to disable it to avoid wrong behaviors.\n    this.integration.core.getCustomEditors().disable();\n  }\n\n  /**\n   * Checks whether we are editing an existing formula or a new one and opens the editor.\n   */\n  openEditor() {\n    this.integration.core.editionProperties.dbclick = false;\n    const image = this._getSelectedImage();\n    if (\n      typeof image !== \"undefined\" &&\n      image !== null &&\n      image.classList.contains(WirisPlugin.Configuration.get(\"imageClassName\"))\n    ) {\n      this.integration.core.editionProperties.temporalImage = image;\n      this.integration.openExistingFormulaEditor();\n    } else {\n      this.integration.openNewFormulaEditor();\n    }\n  }\n\n  /**\n   * Gets the currently selected formula image\n   * @returns {Element} selected image, if any, undefined otherwise\n   */\n  _getSelectedImage() {\n    const { selection } = this.editor.editing.view.document;\n\n    // If we can not extract the formula, fall back to default behavior.\n    if (selection.isCollapsed || selection.rangeCount !== 1) {\n      return;\n    }\n\n    // Look for the <span> wrapping the formula and then for the <img/> inside\n\n    const range = selection.getFirstRange();\n\n    let image;\n\n    for (const span of range) {\n      if (span.item.name !== \"span\") {\n        return;\n      }\n      image = span.item.getChild(0);\n      break;\n    }\n\n    if (!image) {\n      return;\n    }\n\n    // eslint-disable-next-line consistent-return\n    return this.editor.editing.view.domConverter.mapViewToDom(image);\n  }\n}\n\n/**\n * Command for opening the ChemType editor\n */\nexport class ChemTypeCommand extends MathTypeCommand {\n  setEditor() {\n    this.integration.core.getCustomEditors().enable(\"chemistry\");\n  }\n}\n","// CKEditor imports\nimport { Plugin } from \"ckeditor5/src/core.js\";\nimport { ButtonView } from \"ckeditor5/src/ui.js\";\nimport { ClickObserver, HtmlDataProcessor, XmlDataProcessor, UpcastWriter } from \"ckeditor5/src/engine.js\";\nimport { Widget, toWidget, viewToModelPositionOutsideModelElement } from \"ckeditor5/src/widget.js\";\n\n// MathType API imports\nimport IntegrationModel from \"@wiris/mathtype-html-integration-devkit/src/integrationmodel.js\";\nimport Core from \"@wiris/mathtype-html-integration-devkit/src/core.src.js\";\nimport Parser from \"@wiris/mathtype-html-integration-devkit/src/parser.js\";\nimport Util from \"@wiris/mathtype-html-integration-devkit/src/util.js\";\nimport Image from \"@wiris/mathtype-html-integration-devkit/src/image.js\";\nimport Configuration from \"@wiris/mathtype-html-integration-devkit/src/configuration.js\";\nimport Listeners from \"@wiris/mathtype-html-integration-devkit/src/listeners.js\";\nimport MathML from \"@wiris/mathtype-html-integration-devkit/src/mathml.js\";\nimport Latex from \"@wiris/mathtype-html-integration-devkit/src/latex.js\";\nimport StringManager from \"@wiris/mathtype-html-integration-devkit/src/stringmanager.js\";\nimport \"@wiris/mathtype-html-integration-devkit/src/md5.js\";\n\n// Local imports\nimport { MathTypeCommand, ChemTypeCommand } from \"./commands.js\";\nimport CKEditor5Integration from \"./integration.js\";\n\nimport mathIcon from \"../theme/icons/ckeditor5-formula.svg\";\nimport chemIcon from \"../theme/icons/ckeditor5-chem.svg\";\n\nimport packageInfo from \"../package.json\";\n\nexport let currentInstance = null; // eslint-disable-line import/no-mutable-exports\n\nexport default class MathType extends Plugin {\n  static get requires() {\n    return [Widget];\n  }\n\n  static get pluginName() {\n    return \"MathType\";\n  }\n\n  init() {\n    // Create the MathType API Integration object\n    const integration = this._addIntegration();\n    currentInstance = integration;\n\n    // Add the MathType and ChemType commands to the editor\n    this._addCommands();\n\n    // Add the buttons for MathType and ChemType\n    this._addViews(integration);\n\n    // Registers the <mathml> element in the schema\n    this._addSchema();\n\n    // Add the downcast and upcast converters\n    this._addConverters(integration);\n\n    // Expose the WirisPlugin variable to the window\n    this._exposeWiris();\n  }\n\n  /**\n   * Inherited from Plugin class: Executed when CKEditor5 is destroyed\n   */\n  destroy() {\n      // eslint-disable-line class-methods-use-this\n      currentInstance?.destroy();\n  }\n\n  /**\n   * Create the MathType API Integration object\n   * @returns {CKEditor5Integration} the integration object\n   */\n  _addIntegration() {\n    const { editor } = this;\n\n    /**\n     * Integration model constructor attributes.\n     * @type {integrationModelProperties}\n     */\n    const integrationProperties = {};\n    integrationProperties.environment = {};\n    integrationProperties.environment.editor = \"CKEditor5\";\n    integrationProperties.environment.editorVersion = \"5.x\";\n    integrationProperties.version = packageInfo.version;\n    integrationProperties.editorObject = editor;\n    integrationProperties.serviceProviderProperties = {};\n    integrationProperties.serviceProviderProperties.URI = \"https://www.wiris.net/demo/plugins/app\";\n    integrationProperties.serviceProviderProperties.server = \"java\";\n    integrationProperties.target = editor.sourceElement;\n    integrationProperties.scriptName = \"bundle.js\";\n    integrationProperties.managesLanguage = true;\n    // etc\n\n    // There are platforms like Drupal that initialize CKEditor but they hide or remove the container element.\n    // To avoid a wrong behavior, this integration only starts if the workspace container exists.\n    let integration;\n    if (integrationProperties.target) {\n      // Instance of the integration associated to this editor instance\n      integration = new CKEditor5Integration(integrationProperties);\n      integration.init();\n      integration.listeners.fire(\"onTargetReady\", {});\n\n      integration.checkElement();\n\n      this.listenTo(\n        editor.editing.view.document,\n        \"click\",\n        (evt, data) => {\n          // Is Double-click\n          if (data.domEvent.detail === 2) {\n            integration.doubleClickHandler(data.domTarget, data.domEvent);\n            evt.stop();\n          }\n        },\n        { priority: \"highest\" },\n      );\n    }\n\n    return integration;\n  }\n\n  /**\n   * Add the MathType and ChemType commands to the editor\n   */\n  _addCommands() {\n    const { editor } = this;\n\n    // Add command to open the formula editor\n    editor.commands.add(\"MathType\", new MathTypeCommand(editor));\n\n    // Add command to open the chemistry formula editor\n    editor.commands.add(\"ChemType\", new ChemTypeCommand(editor));\n  }\n\n  /**\n   * Add the buttons for MathType and ChemType\n   * @param {CKEditor5Integration} integration the integration object\n   */\n  _addViews(integration) {\n    const { editor } = this;\n\n    // Check if MathType editor is enabled\n    if (Configuration.get(\"editorEnabled\")) {\n      // Add button for the formula editor\n      editor.ui.componentFactory.add(\"MathType\", (locale) => {\n        const view = new ButtonView(locale);\n\n        // View is enabled iff command is enabled\n        view.bind(\"isEnabled\").to(editor.commands.get(\"MathType\"), \"isEnabled\");\n        view.set({\n          label: StringManager.get(\"insert_math\", integration.getLanguage()),\n          icon: mathIcon,\n          tooltip: true,\n        });\n\n        // Callback executed once the image is clicked.\n        view.on(\"execute\", () => {\n          editor.execute(\"MathType\", {\n            integration, // Pass integration as parameter\n          });\n        });\n\n        return view;\n      });\n    }\n\n    // Check if ChemType editor is enabled\n    if (Configuration.get(\"chemEnabled\")) {\n      // Add button for the chemistry formula editor\n      editor.ui.componentFactory.add(\"ChemType\", (locale) => {\n        const view = new ButtonView(locale);\n\n        // View is enabled iff command is enabled\n        view.bind(\"isEnabled\").to(editor.commands.get(\"ChemType\"), \"isEnabled\");\n\n        view.set({\n          label: StringManager.get(\"insert_chem\", integration.getLanguage()),\n          icon: chemIcon,\n          tooltip: true,\n        });\n\n        // Callback executed once the image is clicked.\n        view.on(\"execute\", () => {\n          editor.execute(\"ChemType\", {\n            integration, // Pass integration as parameter\n          });\n        });\n\n        return view;\n      });\n    }\n\n    // Observer for the Double-click event\n    editor.editing.view.addObserver(ClickObserver);\n  }\n\n  /**\n   * Registers the <mathml> element in the schema\n   */\n  _addSchema() {\n    const { schema } = this.editor.model;\n\n    schema.register(\"mathml\", {\n      inheritAllFrom: \"$inlineObject\",\n      allowAttributes: [\"formula\", \"htmlContent\"],\n    });\n  }\n\n  /**\n   * Add the downcast and upcast converters\n   */\n  _addConverters(integration) {\n    const { editor } = this;\n\n    // Editing view -> Model\n    editor.conversion.for(\"upcast\").elementToElement({\n      view: {\n        name: \"span\",\n        classes: \"ck-math-widget\",\n      },\n      model: (viewElement, { writer: modelWriter }) => {\n        const formula = MathML.safeXmlDecode(viewElement.getChild(0).getAttribute(\"data-mathml\"));\n        return modelWriter.createElement(\"mathml\", {\n          formula,\n        });\n      },\n    });\n\n    // Data view -> Model\n    editor.data.upcastDispatcher.on(\"element:math\", (evt, data, conversionApi) => {\n      const { consumable, writer } = conversionApi;\n      const { viewItem } = data;\n\n      // When element was already consumed then skip it.\n      if (!consumable.test(viewItem, { name: true })) {\n        return;\n      }\n\n      // If we encounter any <math> with a LaTeX annotation inside,\n      // convert it into a \"$$...$$\" string.\n      const isLatex = mathIsLatex(viewItem); // eslint-disable-line no-use-before-define\n\n      // Get the formula of the <math> (which is all its children).\n      const processor = new XmlDataProcessor(editor.editing.view.document);\n\n      // Only god knows why the following line makes viewItem lose all of its children,\n      // so we obtain isLatex before doing this because we need viewItem's children for that.\n      const upcastWriter = new UpcastWriter(editor.editing.view.document);\n      const viewDocumentFragment = upcastWriter.createDocumentFragment(viewItem.getChildren());\n\n      // and obtain the attributes of <math> too!\n      const mathAttributes = [...viewItem.getAttributes()].map(([key, value]) => ` ${key}=\"${value}\"`).join(\"\");\n\n      // We process the document fragment\n      let formula = processor.toData(viewDocumentFragment) || \"\";\n\n      // And obtain the complete formula\n      formula = Util.htmlSanitize(`<math${mathAttributes}>${formula}</math>`);\n\n      // Replaces the < & > characters to its HTMLEntity to avoid render issues.\n      formula = formula.replaceAll('\"<\"', '\"&lt;\"').replaceAll('\">\"', '\"&gt;\"').replaceAll(\"><<\", \">&lt;<\");\n\n      /* Model node that contains what's going to actually be inserted. This can be either:\n            - A <mathml> element with a formula attribute set to the given formula, or\n            - If the original <math> had a LaTeX annotation, then the annotation surrounded by \"$$...$$\" */\n      const modelNode = isLatex\n        ? writer.createText(Parser.initParse(formula, integration.getLanguage()))\n        : writer.createElement(\"mathml\", { formula });\n\n      // Find allowed parent for element that we are going to insert.\n      // If current parent does not allow to insert element but one of the ancestors does\n      // then split nodes to allowed parent.\n      const splitResult = conversionApi.splitToAllowedParent(modelNode, data.modelCursor);\n\n      // When there is no split result it means that we can't insert element to model tree, so let's skip it.\n      if (!splitResult) {\n        return;\n      }\n\n      // Insert element on allowed position.\n      conversionApi.writer.insert(modelNode, splitResult.position);\n\n      // Consume appropriate value from consumable values list.\n      consumable.consume(viewItem, { name: true });\n\n      const parts = conversionApi.getSplitParts(modelNode);\n\n      // Set conversion result range.\n      data.modelRange = writer.createRange(\n        conversionApi.writer.createPositionBefore(modelNode),\n        conversionApi.writer.createPositionAfter(parts[parts.length - 1]),\n      );\n\n      // Now we need to check where the `modelCursor` should be.\n      if (splitResult.cursorParent) {\n        // If we split parent to insert our element then we want to continue conversion in the new part of the split parent.\n        //\n        // before: <allowed><notAllowed>foo[]</notAllowed></allowed>\n        // after:  <allowed><notAllowed>foo</notAllowed><converted></converted><notAllowed>[]</notAllowed></allowed>\n\n        data.modelCursor = conversionApi.writer.createPositionAt(splitResult.cursorParent, 0);\n      } else {\n        // Otherwise just continue after inserted element.\n        data.modelCursor = data.modelRange.end;\n      }\n    });\n\n    // Data view -> Model\n    editor.data.upcastDispatcher.on(\"element:img\", (evt, data, conversionApi) => {\n      const { consumable, writer } = conversionApi;\n      const { viewItem } = data;\n\n      // Only upcast when is wiris formula\n      if (viewItem.getClassNames().next().value !== \"Wirisformula\") {\n        return;\n      }\n\n      const mathAttributes = [...viewItem.getAttributes()].map(([key, value]) => ` ${key}=\"${value}\"`).join(\"\");\n      const htmlContent = Util.htmlSanitize(`<img${mathAttributes}>`);\n\n      const modelNode = writer.createElement(\"mathml\", { htmlContent });\n\n      // Find allowed parent for element that we are going to insert.\n      // If current parent does not allow to insert element but one of the ancestors does\n      // then split nodes to allowed parent.\n      const splitResult = conversionApi.splitToAllowedParent(modelNode, data.modelCursor);\n\n      // When there is no split result it means that we can't insert element to model tree, so let's skip it.\n      if (!splitResult) {\n        return;\n      }\n\n      // Insert element on allowed position.\n      conversionApi.writer.insert(modelNode, splitResult.position);\n\n      // Consume appropriate value from consumable values list.\n      consumable.consume(viewItem, { name: true });\n\n      const parts = conversionApi.getSplitParts(modelNode);\n\n      // Set conversion result range.\n      data.modelRange = writer.createRange(\n        conversionApi.writer.createPositionBefore(modelNode),\n        conversionApi.writer.createPositionAfter(parts[parts.length - 1]),\n      );\n\n      // Now we need to check where the `modelCursor` should be.\n      if (splitResult.cursorParent) {\n        // If we split parent to insert our element then we want to continue conversion in the new part of the split parent.\n        //\n        // before: <allowed><notAllowed>foo[]</notAllowed></allowed>\n        // after:  <allowed><notAllowed>foo</notAllowed><converted></converted><notAllowed>[]</notAllowed></allowed>\n\n        data.modelCursor = conversionApi.writer.createPositionAt(splitResult.cursorParent, 0);\n      } else {\n        // Otherwise just continue after inserted element.\n        data.modelCursor = data.modelRange.end;\n      }\n    });\n\n    /**\n     * Whether the given view <math> element has a LaTeX annotation element.\n     * @param {*} math\n     * @returns {bool}\n     */\n    function mathIsLatex(math) {\n      const semantics = math.getChild(0);\n      if (!semantics || semantics.name !== \"semantics\") return false;\n      for (const child of semantics.getChildren()) {\n        if (child.name === \"annotation\" && child.getAttribute(\"encoding\") === \"LaTeX\") {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    function createViewWidget(modelItem, { writer: viewWriter }) {\n      const widgetElement = viewWriter.createContainerElement(\"span\", {\n        class: \"ck-math-widget\",\n      });\n\n      const mathUIElement = createViewImage(modelItem, { writer: viewWriter }); // eslint-disable-line no-use-before-define\n\n      if (mathUIElement) {\n        viewWriter.insert(viewWriter.createPositionAt(widgetElement, 0), mathUIElement);\n      }\n\n      return toWidget(widgetElement, viewWriter);\n    }\n\n    function createViewImage(modelItem, { writer: viewWriter }) {\n      const htmlDataProcessor = new HtmlDataProcessor(viewWriter.document);\n\n      const formula = modelItem.getAttribute(\"formula\");\n      const htmlContent = modelItem.getAttribute(\"htmlContent\");\n\n      if (!formula && !htmlContent) {\n        return null;\n      }\n\n      let imgElement = null;\n\n      if (htmlContent) {\n        imgElement = htmlDataProcessor.toView(htmlContent).getChild(0);\n      } else if (formula) {\n        const mathString = formula.replaceAll('ref=\"<\"', 'ref=\"&lt;\"');\n\n        const imgHtml = Parser.initParse(mathString, integration.getLanguage());\n        imgElement = htmlDataProcessor.toView(imgHtml).getChild(0);\n\n        // Add HTML element (<img>) to model\n        viewWriter.setAttribute(\"htmlContent\", imgHtml, modelItem);\n      }\n\n      /* Although we use the HtmlDataProcessor to obtain the attributes,\n       *  we must create a new EmptyElement which is independent of the\n       *  DataProcessor being used by this editor instance\n       */\n      if (imgElement) {\n        return viewWriter.createEmptyElement(\"img\", imgElement.getAttributes(), {\n          renderUnsafeAttributes: [\"src\"],\n        });\n      }\n\n      return null;\n    }\n\n    // Model -> Editing view\n    editor.conversion.for(\"editingDowncast\").elementToElement({\n      model: \"mathml\",\n      view: createViewWidget,\n    });\n\n    // Model -> Data view\n    editor.conversion.for(\"dataDowncast\").elementToElement({\n      model: \"mathml\",\n      view: createDataString, // eslint-disable-line no-use-before-define\n    });\n\n    /**\n     * Makes a copy of the given view node.\n     * @param {module:engine/view/node~Node} sourceNode Node to copy.\n     * @returns {module:engine/view/node~Node} Copy of the node.\n     */\n    function clone(viewWriter, sourceNode) {\n      if (sourceNode.is(\"text\")) {\n        return viewWriter.createText(sourceNode.data);\n      }\n      if (sourceNode.is(\"element\")) {\n        if (sourceNode.is(\"emptyElement\")) {\n          return viewWriter.createEmptyElement(sourceNode.name, sourceNode.getAttributes());\n        }\n        const element = viewWriter.createContainerElement(sourceNode.name, sourceNode.getAttributes());\n        for (const child of sourceNode.getChildren()) {\n          viewWriter.insert(viewWriter.createPositionAt(element, \"end\"), clone(viewWriter, child));\n        }\n        return element;\n      }\n\n      throw new Exception(\"Given node has unsupported type.\"); // eslint-disable-line no-undef\n    }\n\n    function createDataString(modelItem, { writer: viewWriter }) {\n      const htmlDataProcessor = new HtmlDataProcessor(viewWriter.document);\n\n      // Load img element\n      const mathString =\n        modelItem.getAttribute(\"htmlContent\") || Parser.endParseSaveMode(modelItem.getAttribute(\"formula\"));\n\n      const sourceMathElement = htmlDataProcessor.toView(mathString).getChild(0);\n\n      return clone(viewWriter, sourceMathElement);\n    }\n\n    // This stops the view selection getting into the <span>s and messing up caret movement\n    editor.editing.mapper.on(\n      \"viewToModelPosition\",\n      viewToModelPositionOutsideModelElement(editor.model, (viewElement) => viewElement.hasClass(\"ck-math-widget\")),\n    );\n\n    // Keep a reference to the original get and set function.\n    const { get, set } = editor.data;\n\n    /**\n     * Hack to transform $$latex$$ into <math> in editor.getData()'s output.\n     */\n    editor.data.on(\n      \"get\",\n      (e) => {\n        const output = e.return;\n        const parsedResult = Parser.endParse(output);\n\n        // Cleans all the semantics tag for safexml\n        // including the handwritten data points\n        e.return = MathML.removeSafeXMLSemantics(parsedResult);\n      },\n      { priority: \"low\" },\n    );\n\n    /**\n     * Hack to transform <math> with LaTeX into $$LaTeX$$ and formula images in editor.setData().\n     */\n    editor.data.on(\n      \"set\",\n      (e, args) => {\n        // Retrieve the data to be set on the CKEditor.\n        let modifiedData = args[0];\n        // Regex to find all mathml formulas.\n        const regexp = /(<img\\b[^>]*>)|(<math(.*?)<\\/math>)/gm;\n        const formulas = [];\n        let formula;\n\n        // Both data.set from the source plugin and console command are taken into account as the data received is MathML or an image containing the MathML.\n        while ((formula = regexp.exec(modifiedData)) !== null) {\n          formulas.push(formula[0]);\n        }\n\n        // Loop to find LaTeX and formula images and replace the MathML for the both.\n        formulas.forEach((formula) => {\n          if (formula.includes('encoding=\"LaTeX\"')) {\n            // LaTeX found.\n            const latex = `$$$${Latex.getLatexFromMathML(formula)}$$$`; // We add $$$ instead of $$ because the replace function ignores one $.\n            modifiedData = modifiedData.replace(formula, latex);\n          } else if (formula.includes(\"<img\")) {\n            // If we found a formula image, we should find MathML data, and then substitute the entire image.\n            const regexp = /«math\\b[^»]*»(.*?)«\\/math»/g;\n            const safexml = formula.match(regexp);\n            if (safexml !== null) {\n              const decodeXML = MathML.safeXmlDecode(safexml[0]);\n              modifiedData = modifiedData.replace(formula, decodeXML);\n            }\n          }\n        });\n\n        args[0] = modifiedData;\n      },\n      { priority: \"high\" },\n    );\n  }\n\n  /**\n   * Expose the WirisPlugin variable to the window\n   */\n  // eslint-disable-next-line class-methods-use-this\n  _exposeWiris() {\n    window.WirisPlugin = {\n      Core,\n      Parser,\n      Image,\n      MathML,\n      Util,\n      Configuration,\n      Listeners,\n      IntegrationModel,\n      currentInstance,\n      Latex,\n    };\n  }\n}\n"],"names":["CKEditor5Integration","IntegrationModel","constructor","ckeditorIntegrationModelProperties","editor","editorObject","config","get","integrationParameters","integrationFolderName","getLanguage","editorParameters","language","e","languageObject","hasOwnProperty","ui","addEditorListeners","wirislistenersdisabled","checkElement","newElement","sourceElement","wirisActive","setTarget","addEvents","doubleClickHandler","element","event","core","editionProperties","dbclick","isReadOnly","nodeName","toLowerCase","Util","containsClass","Configuration","stopPropagation","returnValue","getCustomEditors","disable","customEditorAttr","getAttribute","enable","temporalImage","openExistingFormulaEditor","getCorePath","callbackFunction","openNewFormulaEditor","selection","editing","view","document","WirisPlugin","currentInstance","insertMathml","mathml","model","change","writer","getCore","modelElementNew","createElement","formula","Object","fromEntries","getAttributes","isNewElement","viewSelection","modelPosition","mapper","toModelPosition","getLastPosition","insertObject","isCollapsed","range","getRanges","remove","toModelRange","position","createPositionAfter","setSelection","img","viewElement","domConverter","domToView","parent","modelElementOld","toModelElement","createPositionBefore","findText","pivot","parentElement","createRangeIn","descendants","Array","from","getItems","node","viewElementData","data","nodeType","replaceAll","String","fromCharCode","is","replace","textNode","insertFormula","focusElement","windowTarget","wirisProperties","returnObject","mathmlOrigin","editMode","latex","Latex","getLatexFromMathML","createTextNode","latexRange","startNode","startContainer","endNode","endContainer","startPosition","createPositionAt","startOffset","endPosition","endOffset","createRange","previousSibling","latexEdited","MathML","safeXmlDecode","dataset","offset","indexOf","dataOffset","substring","second$","substr","insertText","viewToDom","toViewElement","x","toString","includes","modalDialog","cancelAction","payload","mathml_origin","elapsed_time","Date","now","editionStartTime","editor_origin","toolbar","contentManager","size","length","keys","forEach","key","Telemeter","telemeter","track","error","console","notifyWindowClosed","focus","MathTypeCommand","Command","execute","options","integration","setEditor","openEditor","image","_getSelectedImage","classList","contains","rangeCount","getFirstRange","span","item","name","getChild","mapViewToDom","ChemTypeCommand","MathType","Plugin","requires","Widget","pluginName","init","_addIntegration","_addCommands","_addViews","_addSchema","_addConverters","_exposeWiris","destroy","integrationProperties","environment","editorVersion","version","packageInfo","serviceProviderProperties","URI","server","target","scriptName","managesLanguage","listeners","fire","listenTo","evt","domEvent","detail","domTarget","stop","priority","commands","add","componentFactory","locale","ButtonView","bind","to","set","label","StringManager","icon","mathIcon","tooltip","on","chemIcon","addObserver","ClickObserver","schema","register","inheritAllFrom","allowAttributes","conversion","for","elementToElement","classes","modelWriter","upcastDispatcher","conversionApi","consumable","viewItem","test","isLatex","mathIsLatex","processor","XmlDataProcessor","upcastWriter","UpcastWriter","viewDocumentFragment","createDocumentFragment","getChildren","mathAttributes","map","value","join","toData","htmlSanitize","modelNode","createText","Parser","initParse","splitResult","splitToAllowedParent","modelCursor","insert","consume","parts","getSplitParts","modelRange","cursorParent","end","getClassNames","next","htmlContent","math","semantics","child","createViewWidget","modelItem","viewWriter","widgetElement","createContainerElement","class","mathUIElement","createViewImage","toWidget","htmlDataProcessor","HtmlDataProcessor","imgElement","toView","mathString","imgHtml","setAttribute","createEmptyElement","renderUnsafeAttributes","createDataString","clone","sourceNode","Exception","endParseSaveMode","sourceMathElement","viewToModelPositionOutsideModelElement","hasClass","output","return","parsedResult","endParse","removeSafeXMLSemantics","args","modifiedData","regexp","formulas","exec","push","safexml","match","decodeXML","window","Core","Image","Listeners"],"mappings":"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"}